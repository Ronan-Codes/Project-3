{"version":3,"sources":["utils/mutations.js","utils/auth.js","components/Login/login.jsx","components/SignUp/signup.jsx","pages/Home.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Signup.js","components/Nav/index.js","components/AddImage/index.js","utils/queries.js","components/ArtistCollection/artistCollection.jsx","pages/Dashboard.js","components/AddProfile/index.js","pages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["ADD_PHOTO","gql","ADD_PROFILE_PHOTO","LOGIN","ADD_USER","UPDATE_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","props","useMutation","login","error","useState","password","setPassword","email","setEmail","handleLogin","event","a","preventDefault","variables","mutationResponse","data","AuthService","console","log","alert","class","id","type","placeholder","required","value","onChange","e","target","onClick","changeSignup","SignUp","formUsername","setUsername","formPassword","formEmail","addUser","handleSignup","username","description","Home","showSignup","setShowSignup","changeShowSignUp","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","Signup","formState","setFormState","handleFormSubmit","firstName","lastName","Auth","handleChange","name","className","to","onSubmit","htmlFor","document","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","length","forEach","el","dataset","$target","getElementById","classList","toggle","Nav","loggedIn","role","aria-label","aria-expanded","data-target","aria-hidden","logout","AddImage","addPhoto","userInfo","getProfile","onDrop","useCallback","photo","userId","_id","useDropzone","getRootProps","getInputProps","isDragActive","USER_PHOTOS","USERS","SwiperCore","use","Pagination","ArtistCollection","genres","join","profilePhoto","src","alt","photos","map","singleImage","idx","key","Dashboard","useQuery","loading","users","singleCollection","AddProfile","Profile","photoArray","profilePic","userToken","userPhotos","currentTab","setCurrentTab","setCurrentCollection","isFavorite","collection","images","userProfile","updateUser","editModalStatus","setEditModal","modalStatus","toggleEditModal","useEffect","aria-haspopup","maxLength","href","singleGenre","tabName","currentColl","find","x","switchTab","p","httpLink","createUploadLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","URL","process","origin","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d18af464.chunk.js","sourcesContent":["import gql from 'graphql-tag';\n\nexport const ADD_PHOTO = gql`\nmutation addPhoto($photo: Upload!, $userId: String){\n    addPhoto(photo: $photo, userId: $userId)\n}\n`\nexport const ADD_PROFILE_PHOTO = gql`\nmutation addProfilePhoto($photo: Upload!, $userId: String){\n    addProfilePhoto(photo: $photo, userId: $userId)\n}\n`\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username:$username, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const UPDATE_USER = gql`\n  mutation updateUser($description: String) {\n    updateUser(description: $description) {\n      description\n    }\n  }\n`;\n\n","\nimport decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { LOGIN } from '../../utils/mutations';\nimport { useMutation } from '@apollo/client';\nimport AuthService from '../../utils/auth';\n\n// const Login = (props) => {\n//     const [login, { error }] = useMutation(LOGIN);\n//     const [password, setPassword] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [formState, setFormState] = useState({ email: '', password: '' });\n\n\n//     // const history = useHistory();\n\n//     const showSignup = () => {\n//         props.changeSignup(true);\n//     }\n\n//     const handleLogin = async (event) => {\n//         // history.push('/dashboard');\n\n//         event.preventDefault();\n//         try {\n//             const mutationResponse = await login({\n//                 variables: {\n//                     email: formState.email,\n//                     password: formState.password\n//                 },\n//             });\n//             const token = mutationResponse.data.login.token;\n//             AuthService.login(token);\n//         } catch (e) {\n//             console.log(e);\n//         }\n\n//         if (!email || !password) {\n//             alert('Missing Email Address or Password') //Or some fancy popup - react-popup, bulma probably has a modal, or bootstrap?\n//             return\n//         }\n\n//         //do the login\n//         //do some type of api call here - fetch/axios/something\n//         // fetch(\"some url\", {\n//         //     method: 'post',\n//         //     body: JSON.stringify({\n//         //         email,\n//         //         password\n//         //     })\n//         // }).then(response => response.json)\n//         //     .then(data => {\n//         //         console.log(data);\n//         //     })\n//         //     .catch(e => {\n//         //         console.log(e)\n//         //     })\n\n//         // axios.post(\"some url\", {\n//         //     email,\n//         //     password\n//         // }).then(data => {\n//         //     console.log(data)\n//         // })\n//         //     .catch(e => {\n//         //         console.log(e)\n//         //     })\n//     }\n\nconst Login = (props) => {\n    const [login, { error }] = useMutation(LOGIN);\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [formState, setFormState] = useState({ email: '', password: '' });\n\n\n\n    const showSignup = () => {\n        props.changeSignup(true);\n    }\n\n    const handleLogin = async (event) => {\n        // history.push('/dashboard');\n\n        event.preventDefault();\n        try {\n            const mutationResponse = await login({\n                variables: {\n                    email: email,\n                    password: password\n                },\n            });\n            const token = mutationResponse.data.login.token;\n            AuthService.login(token);\n            window.location.assign('/dashboard');\n        } catch (e) {\n            console.log(e);\n        }\n\n        if (!email || !password) {\n            alert('Missing Email Address or Password') //Or some fancy popup - react-popup, bulma probably has a modal, or bootstrap?\n            return\n        }\n    }\n\n    return (\n        <>\n            <section class=\"hero is-fullheight loginFormWrapper\">\n                <div class=\"hero-body\">\n                    <div class=\"container\">\n                        <div class=\"columns is-centered\">\n                            <div class=\"column is-5-tablet is-4-desktop is-3-widescreen\">\n                                <section class=\"box\">\n                                    <div class=\"loginForm\">\n                                        <div class=\"field\">\n                                            <div class=\"control has-icons-left\">\n                                                <input id=\"loginEmail\" type=\"email\" placeholder=\"Email\" class=\"input\" required\n                                                    value={email}\n                                                    onChange={e => setEmail(e.target.value)}\n                                                />\n                                                <span class=\"icon is-small is-left\">\n                                                    <i class=\"fa fa-envelope\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"field\">\n                                            <div class=\"control has-icons-left\">\n                                                <input id=\"loginPassword\" type=\"password\" placeholder=\"Password\" class=\"input\" required\n                                                    value={password}\n                                                    onChange={e => setPassword(e.target.value)}\n                                                />\n                                                <span class=\"icon is-small is-left\">\n                                                    <i class=\"fa fa-lock\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"field has-text-centered\">\n                                            <button class=\"button is-success\" onClick={handleLogin}>\n                                                Login\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div class=\"has-text-centered\"><a onClick={showSignup}>Signup?</a></div>\n                                </section>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default Login","import React, { useState } from \"react\";\nimport { ADD_USER } from '../../utils/mutations';\nimport { useMutation } from '@apollo/client';\nimport AuthService from '../../utils/auth';\n\nconst SignUp = (props) => {\n    const [formUsername, setUsername] = useState('');\n    const [formPassword, setPassword] = useState('');\n    const [formEmail, setEmail] = useState('');\n    const [addUser] = useMutation(ADD_USER);\n\n    // const history = useHistory();\n\n    const showSignup = () => {\n        props.changeSignup(false);\n    }\n\n    var description = \"\"\n\n    const handleSignup = async (event) => {\n\n        // history.push('/dashboard');\n        event.preventDefault();\n        const mutationResponse = await addUser({\n            variables: {\n                username: formUsername,\n                email: formEmail,\n                password: formPassword,\n                description: description\n            },\n        });\n        const token = mutationResponse.data.addUser.token;\n        AuthService.login(token);\n        window.location.assign('/dashboard');\n        if (!formEmail || !formPassword || !formUsername) {\n            alert('Missing Email Address or Username or Password') //Or some fancy popup - react-popup, bulma probably has a modal, or bootstrap?\n            return\n        }\n\n    }\n\n    return (\n        <>\n            <section class=\"hero is-fullheight loginFormWrapper\">\n                <div class=\"hero-body\">\n                    <div class=\"container\">\n                        <div class=\"columns is-centered\">\n                            <div class=\"column is-5-tablet is-4-desktop is-3-widescreen\">\n                                <section class=\"box\">\n                                    <div class=\"signupForm\">\n                                        <div class=\"field\">\n                                            <div class=\"control has-icons-left\">\n                                                <input id=\"signupUserName\" type=\"text\" placeholder=\"Username\" class=\"input\" required\n                                                    value={formUsername}\n                                                    onChange={e => setUsername(e.target.value)}\n                                                />\n                                                <span class=\"icon is-small is-left\">\n                                                    <i class=\"fa fa-user\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"field\">\n                                            <div class=\"control has-icons-left\">\n                                                <input id=\"signupEmail\" type=\"email\" placeholder=\"Email\" class=\"input\" required\n                                                    value={formEmail}\n                                                    onChange={e => setEmail(e.target.value)}\n                                                />\n                                                <span class=\"icon is-small is-left\">\n                                                    <i class=\"fa fa-envelope\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"field\">\n                                            <div class=\"control has-icons-left\">\n                                                <input id=\"signupPassword\" type=\"password\" placeholder=\"Password\" class=\"input\" required\n                                                    value={formPassword}\n                                                    onChange={e => setPassword(e.target.value)}\n                                                />\n                                                <span class=\"icon is-small is-left\">\n                                                    <i class=\"fa fa-lock\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"field has-text-centered\">\n                                            <button class=\"button is-success\" onClick={handleSignup}>\n                                                Sign up\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div class=\"has-text-centered\"><a onClick={showSignup}>Login</a></div>\n                                </section>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default SignUp","import React, { useState } from \"react\";\nimport Login from \"../components/Login/login\";\nimport SignUp from \"../components/SignUp/signup\";\n\nconst Home = () => {\n  const [showSignup, setShowSignup] = useState(false);\n\n  const changeShowSignUp = (value) => {\n    setShowSignup(value);\n  }\n\n  return (\n    <>\n      {!showSignup ? <Login changeSignup={changeShowSignUp}/> : ''}\n      {showSignup ? <SignUp changeSignup={changeShowSignUp}/> : ''}\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, {useState} from \"react\";\nimport AuthService from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n    // Get all \"navbar-burger\" elements\n    const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\n  \n    // Check if there are any navbar burgers\n    if ($navbarBurgers.length > 0) {\n  \n      // Add a click event on each of them\n      $navbarBurgers.forEach( el => {\n        el.addEventListener('click', () => {\n  \n          // Get the target from the \"data-target\" attribute\n          const target = el.dataset.target;\n          const $target = document.getElementById(target);\n  \n          // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n          el.classList.toggle('is-active');\n          $target.classList.toggle('is-active');\n  \n        });\n      });\n    }\n  \n  });\n\nfunction Nav() {\n//   const [loggedIn, setLoggedIn] = useState(true);\n  const handleLogout = (e) => {\n      e.preventDefault();\n      AuthService.logout();\n  }\n  const loggedIn = AuthService.loggedIn()\n  return (\n    <nav className=\"navbar mainNav\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n                <div className=\"navbar-item\">\n                    <h1 className=\"title appName has-text-light\">Pic'd Up</h1>\n                </div>\n\n                <a role=\"button\" className=\"navbar-burger \" aria-label=\"menu\" aria-expanded=\"false\"\n                    data-target=\"navbarBasicExample\">\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </a>\n            </div>\n\n            <div id=\"navbarBasicExample\" className=\"navbar-menu mainNav\">\n                <div className=\"navbar-start\"></div>\n\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item \">\n                        <div className=\"buttons\">\n                            {loggedIn ? <Link className=\"button clearColor\" to=\"/dashboard\">\n                                <i className=\"fas fa-home is-size-3 has-text-light\"></i>\n                                </Link> : <Link className=\"button clearColor\" to=\"/\">\n                                <i className=\"fas fa-home is-size-3 has-text-light\"></i>\n                            </Link>} \n                            {loggedIn ? <Link className=\"button clearColor\" to=\"/profile\"><i className=\"fas fa-user-circle is-size-3 has-text-light\"></i></Link> : ''}\n                            {loggedIn ? <a className=\"button clearColor\" onClick={handleLogout}>\n                                <i className=\"fas fa-sign-in-alt is-size-3 has-text-light\"></i>\n                            </a>\n                            : ''}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </nav>\n  );\n}\n\nexport default Nav;\n","import { useMutation } from '@apollo/client';\nimport React, {useCallback} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {ADD_PHOTO} from '../../utils/mutations'\nimport AuthService from '../../utils/auth'\n\n\nfunction AddImage(){\n    const [addPhoto] = useMutation(ADD_PHOTO)\n    const userInfo = AuthService.getProfile();\n    // console.log(userInfo.data._id)\n    const onDrop = useCallback(\n        ([photo]) => {\n            // console.log(photo)\n            addPhoto({variables: {photo, userId: userInfo.data._id}})\n        },\n        [addPhoto]\n    )\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n    return(\n        <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            {isDragActive ? (\n                <p>Drop Here...</p>\n            ) : (\n                <p>Upload Photo</p>\n            )}\n        </div>\n        // <form action='/add' method='post' encType='multipart/form-data'>\n        //     <input type='file' name='avatar'/>\n        //     <button onClick={onDrop}>Add</button>\n        // </form>\n    )\n}\n\nexport default AddImage;","import gql from 'graphql-tag'\n\nexport const ALL_PHOTOS = gql `\n    {\n        photos {\n            _id\n            photoName\n            mimetype\n            encoding\n        }\n    }\n`\nexport const USER_PHOTOS = gql `\nquery userPhotos($userId: ID!){\n    userPhotos(userId: $userId){\n        _id\n        username\n        description\n        email\n        profilePhoto{\n            _id\n        }\n        photos{\n            _id\n        }\n    }\n}\n`\nexport const USERS = gql `\n    {\n        users{\n            _id\n            description\n            username\n            profilePhoto{\n                _id\n            }\n            photos{\n                _id\n            }\n        }\n    }\n`","import React from \"react\";\n\n// import { Pagination } from 'swiper';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Pagination } from \"swiper/core\";\n// import 'swiper/components/navigation/navigation.min.css'\n\nimport 'swiper/swiper-bundle.min.css'\nimport 'swiper/swiper.min.css'\nimport 'swiper/components/pagination/pagination.min.css'\nSwiperCore.use([Pagination]);\n\nconst ArtistCollection = (props) => {\n    const genres = props && props.data && props.data.genres ? props.data.genres.join(' | ') : '';\n    const name = props && props.data && props.data.name ? props.data.name : ''\n\n    return (\n        <> \n            <section className=\"columns column is-four-fifths is-multiline mt-5\">\n                <div className=\"column dropShadow whiteBg\">\n                    <div className=\"columns\">\n                        <div className=\"column is-one-quarter searchedUserPicCont\">\n                            <div className=\"\">\n                                {/* <figure className=\"image\">\n                                    {props.data.profilePhoto? \n                                    (<img src={`/photo/${props.data.profilePhoto._id}`} className=\"profilePic p-3\" alt=\"Profile picture\" />\n                                    ):\n                                    (<img src='/images/Profiles/user.png' className=\"profilePic p-3\" alt=\"Profile picture\" />)}\n                                </figure> */}\n\n                                {/* <div className=\"\"> */}\n                                    <div className=\"imageContainer\">\n                                        {props.data.profilePhoto? \n                                        (<img src={`/photo/${props.data.profilePhoto._id}`} className=\"profilePic p-3 portfolioImg\" alt=\"Profile picture\" />\n                                        ):\n                                        (<img src='/images/Profiles/user.png' className=\"profilePic p-3 portfolioImg\" alt=\"Profile picture\" />)}\n                                    </div>\n                                {/* </div> */}\n                                \n                                <h2 className=\"has-text-centered is-size-4\">{props.data.username}</h2>\n                                <h3 className=\"has-text-centered has-text-grey searchedUserGenre\">\n                                    {genres}\n                                </h3>\n                            </div>\n                        </div>\n                        <div className=\"column is-three-quarters scrolling-wrapper is-vcentered\">\n                            {/* <Swiper\n                                // className=\"tall\"\n                                // className=\"width\"\n                                className=\"\"\n                                // navigation\n                                // setWrapperSize={true}\n                                \n                                pagination={{\n                                    clickable: true\n                                }}\n                                spaceBetween={0}\n                                slidesPerView={3}\n                                // centeredSlides\n                                onSlideChange={() => console.log('slide change')}\n                                onSwiper={(swiper) => console.log(swiper)}\n                            >\n                                {props.data.photos && props.data.photos.length > 0 ?\n                                props.data.photos.map((singleImage, idx) => (\n                                <SwiperSlide><img src={`/photo/${singleImage._id}`} /></SwiperSlide>\n                                ))\n                                    : ''}\n                            </Swiper> */}\n\n                            {/* can remove this div */}\n                            <div className=\"columns is-full is-vcentered\">\n                                {props.data.photos && props.data.photos.length > 0 ?\n                                    props.data.photos.map((singleImage, idx) => (\n\n                                        // <div key={idx} className=\"image mr-3\" style={{ \n                                        //     backgroundImage: `url(\"/photo/${singleImage._id}\")` \n                                        //   }}>\n\n                                        <div key={idx} className=\"is-one-third column mr-3 image\">\n                                            <img src={`/photo/${singleImage._id}`} />\n                                        </div>\n                                    ))\n                                : ''}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default ArtistCollection;","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport {USERS} from '../utils/queries';\nimport ArtistCollection from \"../components/ArtistCollection/artistCollection\";\n\nconst Dashboard = (props) => {\n    const {loading, data} = useQuery(USERS);\n    if(loading){\n        return <p>Loading...</p>\n    }\n    else {\n        console.log(data)\n    }\n\n    return (\n        <>  \n            <div className=\"columns is-centered is-gapless mt-5 is-multiline\">\n                { data.users.map((singleCollection, idx) => (\n                    <ArtistCollection key={idx} data={singleCollection}/>\n                ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default Dashboard","import { useMutation} from '@apollo/client';\nimport React, {useCallback} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {ADD_PROFILE_PHOTO} from '../../utils/mutations'\nimport AuthService from '../../utils/auth'\n\n\nfunction AddProfile(){\n    const [addPhoto] = useMutation(ADD_PROFILE_PHOTO)\n    const userInfo = AuthService.getProfile();\n    // console.log(userInfo.data._id)\n    const onDrop = useCallback(\n        ([photo]) => {\n            // console.log(photo)\n            addPhoto({variables: {photo, userId: userInfo.data._id}})\n        },\n        [addPhoto]\n    )\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n    return(\n        <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            {isDragActive ? (\n                <i className=\"far fa-id-badge has-text-black\"></i>\n            ) : (\n                <i className=\"far fa-id-badge has-text-black\"></i>\n            )}\n        </div>\n        // <form action='/add' method='post' encType='multipart/form-data'>\n        //     <input type='file' name='avatar'/>\n        //     <button onClick={onDrop}>Add</button>\n        // </form>\n    )\n}\n\nexport default AddProfile;","import React, { useState, useEffect} from \"react\";\nimport AuthService from '../utils/auth'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { UPDATE_USER } from '../utils/mutations';\nimport {USER_PHOTOS} from '../utils/queries'\nimport AddImage from \"../components/AddImage\";\nimport AddProfile from \"../components/AddProfile\";\n\n// // import { Pagination } from 'swiper';\n// import { Swiper, SwiperSlide } from \"swiper/react\";\n// import SwiperCore, { Pagination } from \"swiper/core\";\n// // import 'swiper/components/navigation/navigation.min.css'\n// import 'swiper/swiper-bundle.min.css'\n// import 'swiper/swiper.min.css'\n// import 'swiper/components/pagination/pagination.min.css'\n// SwiperCore.use([Pagination]);\n\nconst Profile = (props) => {\n    const userToken = AuthService.getProfile();\n    // console.log(userToken.data._id)\n    const {loading, data} = useQuery(USER_PHOTOS, {\n        variables: {userId: userToken.data._id}\n    })\n    console.log(data)\n    let _id\n    let photoArray\n    let email\n    let username\n    let profilePic\n    let description\n    if(!loading){\n        _id = data.userPhotos._id\n        // console.log(data.userPhotos.photos)\n        photoArray = data.userPhotos.photos\n        email = data.userPhotos.email\n        username = data.userPhotos.username\n        profilePic = data.userPhotos.profilePhoto\n        description = data.userPhotos.description\n    }\n\n    const [currentTab, setCurrentTab] = useState('');\n    const [currentCollection, setCurrentCollection] = useState([]);\n\n    const [userProfile, setUserProfile] = useState({\n        name: 'John Doe',\n        profilePic: '/images/Profiles/LeesAdventures.jpg',\n        email: '',\n        isFavorite: false,\n        // description: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dignissimos ullam, in maxime voluptatum iste nemo laboriosam facere voluptas modi id velnulla mollitia libero, amet numquam, tempore architecto nostrum et.',\n        genres: ['Portrait', 'Weddings', 'Street', 'Travel'],\n        collection: [\n            { type: 'Portrait', images: ['/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg'] },\n            { type: 'Weddings', images: ['/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg'] },\n            { type: 'Street', images: ['/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg'] },\n            { type: 'Travel', images: ['/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg'] }\n        ]\n    });\n\n    const switchTab = (tabName) => {\n        setCurrentTab(tabName);\n        const currentColl = userProfile.collection.find(x => x.type === tabName);\n        setCurrentCollection(currentColl.images);\n    }\n\n    // Modal Functions\n    const [updateUser] = useMutation(UPDATE_USER);\n    const [editModalStatus, setEditModal] = useState(false);\n    var modalStatus = editModalStatus ? \"is-active\" : \"\";\n    var toggleEditModal = () => {\n        setEditModal(!editModalStatus)\n    }\n\n    const [formState, setFormState] = useState({ description: description});\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        const mutationResponse = await updateUser({\n          variables: {\n            description: formState.description,\n          },\n        });\n       \n        toggleEditModal();\n\n        console.log(mutationResponse)\n    };\n\n    const handleChange = (event) => {\n        const { description, value } = event.target;\n        setFormState({\n        description: value\n        });\n    };\n    \n    useEffect(()=> {\n        // fetchData();\n    }, [data]);\n    \n    return (\n        <>\n            {loading ? <div>Some Loading Icon etc</div> :\n                <>\n                    <header className=\"columns is-centered is-gapless \">\n                        <div className=\"column is-one-fifth ml-5\">\n                            <div className=\"card\">\n                                {/* <div className=\"\">\n                                    <figure className=\"image\">\n                                        {profilePic ? <img src={`/photo/${profilePic._id}`} className=\"profilePic p-5\" alt=\"Profile picture\" /> : <img src='/images/Profiles/LeesAdventures.jpg' className=\"profilePic p-2\" alt=\"Profile picture\" />}\n                                    </figure>\n                                </div> */}\n\n                                <div class=\"imageContainer\">\n                                    {/* <img className=\"portfolioImg\" src={`/photo/${p._id}`} alt=\"\" /> */}\n                                    {profilePic ? <img src={`/photo/${profilePic._id}`} className=\"profilePic p-3 portfolioImg\" alt=\"Profile picture\" /> : <img src='/images/Profiles/user.png' className=\"profilePic p-3 portfolioImg\" alt=\"Profile picture\" />}\n                                </div>\n\n                                <div className=\"has-text-centered\">\n                                <button className=\"button is-small is-primary modal-button\" data-target=\"modal\" aria-haspopup=\"true\" onClick={toggleEditModal}>Edit Profile</button>\n                                    <div className={`modal ${modalStatus}`}>\n                                        <div className=\"modal-background\"></div>\n                                        <div className=\"modal-card\">\n                                            <header className=\"modal-card-head\">\n                                            <p className=\"modal-card-title\">Edit Profile</p>\n                                            <button className=\"delete\" aria-label=\"close\" onClick={toggleEditModal}></button>\n                                            </header>\n                                            <section className=\"modal-card-body\">\n                                                <h2>About Me</h2>\n                                                {/* <form onSubmit={handleFormSubmit}> */}\n                                                    <textarea class=\"textarea\" maxLength=\"150\" placeholder=\"e.g. Hello world\" onChange={handleChange}></textarea>\n                                                {/* </form> */}\n                                            </section>\n                                            <footer className=\"modal-card-foot\">\n                                                {/* add mutation to save Changes and toggle editmodal */}\n                                            <button className=\"button is-success\" onClick={handleFormSubmit}>Save changes</button>\n                                            <button className=\"button\" onClick={toggleEditModal}>Cancel</button>\n                                            </footer>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <footer className=\"card-footer is-size-4\">\n                                    <a href={`mailto:${email}`} className=\"card-footer-item\"><i className=\"fas fa-envelope has-text-black\"></i></a>\n                                    {userProfile.isFavorite\n                                        // add like function here\n                                        ? <a href=\"#\" className=\"card-footer-item\"><i className=\"fas fa-heart has-text-danger\"></i></a> :\n                                        <a href=\"#\" className=\"card-footer-item\"><i className=\"far fa-heart has-text-danger\"></i></a>}\n                                        {/* Add profile pic button */}\n                                    <a href=\"#\" className=\"card-footer-item\"><AddProfile><i className=\"fas fa-share-square has-text-black\"></i></AddProfile></a>\n                                </footer>\n\n                            </div>\n                        </div>\n\n                        <div className=\"column columns is-centered is-three-fifths\">\n                            <div className=\"column columns is-four-fifths\">\n                                <div className=\"column is-full is-size-4 has-text-centered mt-5\">\n                                    <div className=\"aboutMeWrapper\">\n                                        <h2 id=\"nameContainer\" className=\"is-size-3\">{username}</h2>\n                                        {/* <span id=\"aboutMeContainer\">{userProfile.description}</span> */}\n                                        <span id=\"aboutMeContainer\">{description? description : \"Tell us about yourself!\"}</span>\n                                        \n                                    </div>\n                                    <div className=\"manageBtnWrapper\">\n                                        <button className=\"button has-text-light manageBtn\"><AddImage/></button>\n                                    </div>\n                                    {/* <div className=\"editButtonWrapper\">\n                                    <button className=\"button is-primary modal-button\" data-target=\"modal\" aria-haspopup=\"true\">Edit Profile</button>\n                                    </div> */}\n                                </div>\n                            </div>\n                        </div>\n                    </header>\n                    <section className=\"columns is-centered\">\n                        <div className=\"column is-four-fifths\">\n                            <div className=\"tabs is-centered mt-5\">\n                                <ul>\n                                    {userProfile.genres.map((singleGenre, idx) => (\n                                        <li key={idx} className={`is-pointer ${currentTab === singleGenre ? 'active' : ''}`} onClick={() => switchTab(singleGenre)}>{singleGenre}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n                    </section>\n\n                    {/* <div className=\"columns is-centered\">\n                        <Swiper\n                            // className=\"tall\"\n                            // navigation\n                            \n                            pagination={{\n                                clickable: true\n                            }}\n                            spaceBetween={50}\n                            slidesPerView={3}\n                            // centeredSlides\n                            onSlideChange={() => console.log('slide change')}\n                            onSwiper={(swiper) => console.log(swiper)}\n                        >\n                            {photoArray && photoArray.length > 0 ?\n                                photoArray.map((p, idx) => (\n                            <SwiperSlide><img src={`/photo/${p._id}`} alt=\"Profile picture\"/></SwiperSlide>\n                            ))\n                                : ''}\n                            //<div className=\"swiper-pagination swiper-pagination-timeline-page\" />//\n                        </Swiper>\n                    </div> */}\n\n                    <main className=\"columns is-centered\">\n                        <div className=\"column columns is-four-fifths is-multiline\">\n                            {photoArray && photoArray.length > 0 ?\n                                photoArray.map((p, idx) => (\n                                    <div key={idx} className=\"column is-one-third-desktop is-half-tablet imageWrapper\">\n                                        {/* <div className=\"card\">\n                                            <div className=\"card-image\">\n                                                <figure className=\"image\">\n                                                    <img src={`/photo/${p._id}`} alt=\"\" />\n                                                </figure>\n                                            </div>\n                                        </div> */}\n                                        <div class=\"imageContainer\">\n                                            <img className=\"portfolioImg\" src={`/photo/${p._id}`} alt=\"\" />\n                                        </div>\n                                    </div>\n                                ))\n                                : ''}\n                        </div>\n                    </main>\n\n                    {/* <main class=\"columns is-centered\">\n                        <div class=\"column columns is-four-fifths is-multiline\"> */}\n\n\n                </>\n            }\n        </>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport {createUploadLink} from 'apollo-upload-client';\n\nimport Home from './pages/Home';\nimport NoMatch from './pages/NoMatch';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport AddImage from './components/AddImage';\nimport Dashboard from './pages/Dashboard';\nimport Profile from './pages/Profile';\n\nconst httpLink = createUploadLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/add\" component = {AddImage}/>\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}