{"version":3,"sources":["utils/mutations.js","utils/auth.js","components/Login/login.jsx","components/SignUp/signup.jsx","pages/Home.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","utils/queries.js","components/AddImage/index.js","components/ArtistCollection/artistCollection.jsx","pages/Dashboard.js","pages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["ADD_PHOTO","gql","LOGIN","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","props","useMutation","login","error","useState","password","setPassword","email","setEmail","handleLogin","useHistory","event","a","preventDefault","variables","mutationResponse","data","AuthService","console","log","alert","className","id","type","placeholder","required","value","onChange","e","target","onClick","changeSignup","SignUp","formUsername","setUsername","formPassword","formEmail","username","addUser","handleSignup","class","Home","showSignup","setShowSignup","changeShowSignUp","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","formState","setFormState","handleFormSubmit","handleChange","name","to","onSubmit","htmlFor","Signup","firstName","lastName","Auth","Nav","loggedIn","role","aria-label","aria-expanded","data-target","aria-hidden","ALL_PHOTOS","AddImage","addPhoto","useQuery","onDrop","useCallback","photo","useDropzone","getRootProps","getInputProps","isDragActive","photos","map","src","_id","ArtistCollection","genres","join","profile","alt","images","length","singleImage","idx","key","Dashboard","collection","useEffect","fetch","then","response","json","catch","axios","get","singleCollection","Profile","currentTab","setCurrentTab","loading","setLoading","currentCollection","setCurrentCollection","profilePic","isFavorite","description","userProfile","switchTab","tabName","currentColl","find","x","firstTab","getData","href","singleGenre","httpLink","createUploadLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9c0da23d.chunk.js","sourcesContent":["import gql from 'graphql-tag';\n\nexport const ADD_PHOTO = gql`\nmutation addPhoto($photo: Upload!){\n    addPhoto(photo: $photo)\n}\n`\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username:$username, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n","\nimport decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { LOGIN } from '../../utils/mutations';\nimport { useMutation } from '@apollo/client';\nimport AuthService from '../../utils/auth';\n\nconst Login = (props) => {\n    const [login, { error }] = useMutation(LOGIN);\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [formState, setFormState] = useState({ email: '', password: '' });\n\n\n    const history = useHistory();\n\n    const showSignup = () => {\n        props.changeSignup(true);\n    }\n\n    const handleLogin = async (event) => {\n        // history.push('/dashboard');\n\n        event.preventDefault();\n        try {\n            const mutationResponse = await login({\n                variables: {\n                    email: email,\n                    password: password\n                },\n            });\n            const token = mutationResponse.data.login.token;\n            AuthService.login(token);\n            window.location.assign('/dashboard');\n        } catch (e) {\n            console.log(e);\n        }\n\n        if (!email || !password) {\n            alert('Missing Email Address or Password') //Or some fancy popup - react-popup, bulma probably has a modal, or bootstrap?\n            return\n        }\n\n        //do the login\n        //do some type of api call here - fetch/axios/something\n        // fetch(\"some url\", {\n        //     method: 'post',\n        //     body: JSON.stringify({\n        //         email,\n        //         password\n        //     })\n        // }).then(response => response.json)\n        //     .then(data => {\n        //         console.log(data);\n        //     })\n        //     .catch(e => {\n        //         console.log(e)\n        //     })\n\n        // axios.post(\"some url\", {\n        //     email,\n        //     password\n        // }).then(data => {\n        //     console.log(data)\n        // })\n        //     .catch(e => {\n        //         console.log(e)\n        //     })\n    }\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n        <>\n            <section className=\"hero is-fullheight loginFormWrapper\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <div className=\"columns is-centered\">\n                            <div className=\"column is-5-tablet is-4-desktop is-3-widescreen\">\n                                <section className=\"box\">\n                                    <div className=\"loginForm\">\n                                        <div className=\"field\">\n                                            <div className=\"control has-icons-left\">\n                                                <input id=\"loginEmail\" type=\"email\" placeholder=\"Email\" className=\"input\" required\n                                                    value={email}\n                                                    onChange={e => setEmail(e.target.value)}\n                                                />\n                                                <span className=\"icon is-small is-left\">\n                                                    <i className=\"fa fa-envelope\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div className=\"field\">\n                                            <div className=\"control has-icons-left\">\n                                                <input id=\"loginPassword\" type=\"password\" placeholder=\"Password\" className=\"input\" required\n                                                    value={password}\n                                                    onChange={e => setPassword(e.target.value)}\n                                                />\n                                                <span className=\"icon is-small is-left\">\n                                                    <i className=\"fa fa-lock\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div className=\"field has-text-centered\">\n                                            <button className=\"button is-success\" onClick={handleLogin}>\n                                                Login\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div className=\"has-text-centered\"><a onClick={showSignup}>Signup?</a></div>\n                                </section>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default Login","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { ADD_USER } from '../../utils/mutations';\nimport { useMutation } from '@apollo/client';\nimport AuthService from '../../utils/auth';\n\nconst SignUp = (props) => {\n    const [formUsername, setUsername] = useState('');\n    const [formPassword, setPassword] = useState('');\n    const [formEmail, setEmail] = useState('');\n    const [formState, setFormState] = useState({ username: '', email: '', password: '' });\n    const [addUser] = useMutation(ADD_USER);\n\n    // const history = useHistory();\n\n    const showSignup = () => {\n        props.changeSignup(false);\n    }\n\n    const handleSignup = async (event) => {\n\n        // history.push('/dashboard');\n        event.preventDefault();\n        const mutationResponse = await addUser({\n            variables: {\n                username: formUsername,\n                email: formEmail,\n                password: formPassword\n\n            },\n        });\n        const token = mutationResponse.data.addUser.token;\n        AuthService.login(token);\n        window.location.assign('/dashboard');\n        if (!formEmail || !formPassword || !formUsername) {\n            alert('Missing Email Address or Username or Password') //Or some fancy popup - react-popup, bulma probably has a modal, or bootstrap?\n            return\n        }\n\n        //do the sign up\n        //do some type of api call here - fetch/axios/something\n        // fetch(\"some url\", {\n        //     method: 'post',\n        //     body: JSON.stringify({\n        //         email,\n        //         password\n        //     })\n        // }).then(response => response.json)\n        //     .then(data => {\n        //         console.log(data);\n        //     })\n        //     .catch(e => {\n        //         console.log(e)\n        //     })\n\n        // axios.post(\"some url\", {\n        //     email,\n        //     password\n        // }).then(data => {\n        //     console.log(data)\n        // })\n        //     .catch(e => {\n        //         console.log(e)\n        //     })\n    }\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n        <>\n            <section class=\"hero is-fullheight loginFormWrapper\">\n                <div class=\"hero-body\">\n                    <div class=\"container\">\n                        <div class=\"columns is-centered\">\n                            <div class=\"column is-5-tablet is-4-desktop is-3-widescreen\">\n                                <section class=\"box\">\n                                    <div class=\"signupForm\">\n                                        <div class=\"field\">\n                                            <div class=\"control has-icons-left\">\n                                                <input id=\"signupUserName\" type=\"text\" placeholder=\"Username\" class=\"input\" required\n                                                    value={formUsername}\n                                                    onChange={e => setUsername(e.target.value)}\n                                                />\n                                                <span class=\"icon is-small is-left\">\n                                                    <i class=\"fa fa-user\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"field\">\n                                            <div class=\"control has-icons-left\">\n                                                <input id=\"signupEmail\" type=\"email\" placeholder=\"Email\" class=\"input\" required\n                                                    value={formEmail}\n                                                    onChange={e => setEmail(e.target.value)}\n                                                />\n                                                <span class=\"icon is-small is-left\">\n                                                    <i class=\"fa fa-envelope\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"field\">\n                                            <div class=\"control has-icons-left\">\n                                                <input id=\"signupPassword\" type=\"password\" placeholder=\"Password\" class=\"input\" required\n                                                    value={formPassword}\n                                                    onChange={e => setPassword(e.target.value)}\n                                                />\n                                                <span class=\"icon is-small is-left\">\n                                                    <i class=\"fa fa-lock\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"field has-text-centered\">\n                                            <button class=\"button is-success\" onClick={handleSignup}>\n                                                Sign up\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div class=\"has-text-centered\"><a onClick={showSignup}>Login</a></div>\n                                </section>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default SignUp","import React, { useState } from \"react\";\nimport Login from \"../components/Login/login\";\nimport SignUp from \"../components/SignUp/signup\";\n\nconst Home = () => {\n  const [showSignup, setShowSignup] = useState(false);\n\n  const changeShowSignUp = (value) => {\n    setShowSignup(value);\n  }\n\n  return (\n    <>\n      {!showSignup ? <Login changeSignup={changeShowSignUp}/> : ''}\n      {showSignup ? <SignUp changeSignup={changeShowSignUp}/> : ''}\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport AuthService from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      AuthService.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, {useState} from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  const [loggedIn, setLoggedIn] = useState(true);\n\n  return (\n    <nav className=\"navbar mainNav\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n                <div className=\"navbar-item\">\n                    <h1 className=\"title appName has-text-light\">Pic'd Up</h1>\n                </div>\n\n                <a role=\"button\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\"\n                    data-target=\"navbarBasicExample\">\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </a>\n            </div>\n\n            <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                <div className=\"navbar-start\"></div>\n\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item\">\n                        <div className=\"buttons\">\n                            {loggedIn ? <Link className=\"button clearColor\" to=\"/dashboard\">\n                                <i className=\"fas fa-home is-size-3 has-text-light\"></i>\n                                </Link> : <Link className=\"button clearColor\" to=\"/\">\n                                <i className=\"fas fa-home is-size-3 has-text-light\"></i>\n                            </Link>} \n                            {loggedIn ? <Link className=\"button clearColor\" to=\"/profile\"><i className=\"fas fa-user-circle is-size-3 has-text-light\"></i></Link> : ''}\n                            {loggedIn ? <a className=\"button clearColor\">\n                                <i className=\"fas fa-sign-in-alt is-size-3 has-text-light\"></i>\n                            </a>\n                            : ''}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </nav>\n  );\n}\n\nexport default Nav;\n","import gql from 'graphql-tag'\n\nexport const ALL_PHOTOS = gql `\n    {\n        photos {\n            _id\n            photoName\n            mimetype\n            encoding\n        }\n    }\n`","import { useMutation, useQuery } from '@apollo/client';\nimport React, {useCallback} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {ADD_PHOTO} from '../../utils/mutations'\nimport {ALL_PHOTOS} from '../../utils/queries'\n\n\nfunction AddImage(){\n    const [addPhoto] = useMutation(ADD_PHOTO)\n    const {data} = useQuery(ALL_PHOTOS)\n    console.log(data);\n    const onDrop = useCallback(\n        ([photo]) => {\n            console.log(photo)\n            addPhoto({variables: {photo}})\n        },\n        [addPhoto]\n    )\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n    return(\n        <div>\n        <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            {isDragActive ? (\n                <p>Drop the files here ...</p>\n            ) : (\n                <p>Drag 'n' drop some files here, or click to select files</p>\n            )}\n        </div>\n                {data ? (data.photos.map((photo) => (\n                    <img src= {`/photo/${photo._id}`}/>\n                ))) : (<p>loading</p>)}\n        </div>\n        // <form action='/add' method='post' encType='multipart/form-data'>\n        //     <input type='file' name='avatar'/>\n        //     <button onClick={onDrop}>Add</button>\n        // </form>\n    )\n}\n\nexport default AddImage;","import React from \"react\";\n\nconst ArtistCollection = (props) => {\n    const genres = props && props.data && props.data.genres ? props.data.genres.join(' | ') : '';\n    const name = props && props.data && props.data.name ? props.data.name : ''\n\n    return (\n        <>\n            <section className=\"columns column is-four-fifths is-multiline mt-5\">\n                <div className=\"column dropShadow whiteBg\">\n                    <div className=\"columns\">\n                        <div className=\"column is-one-quarter searchedUserPicCont\">\n                            <div className=\"\">\n                                <figure className=\"image\">\n                                    <img src={props.data.profile} className=\"profilePic p-2\" alt=\"Profile picture\" />\n                                </figure>\n                                <h2 className=\"has-text-centered is-size-4\">{name}</h2>\n                                <h3 className=\"has-text-centered has-text-grey searchedUserGenre\">\n                                    {genres}\n                                </h3>\n                            </div>\n                        </div>\n                        <div className=\"column is-three-quarters scrolling-wrapper\">\n                            {props.data.images && props.data.images.length > 0 ?\n                                props.data.images.map((singleImage, idx) => (\n                                    <div key={idx} className=\"image mr-3\">\n                                        <img src={singleImage} />\n                                    </div>\n                                ))\n                            : ''}\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default ArtistCollection;","import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport ArtistCollection from \"../components/ArtistCollection/artistCollection\";\n\nconst Dashboard = (props) => {\n\n    const [userId, setUserId] = useState('');\n    const [collection, setCollection] = useState([\n        {\n            profile: '/images/Profiles/LeesAdventures.jpg',\n            name: 'John Doe',\n            genres: ['Street','Portrait','Travel'],\n            images: [\n                \"/images/portrait/pexels-ali-pazani-3196587.jpg\",\n                \"/images/portrait/pexels-ali-pazani-3196587.jpg\",\n                \"/images/portrait/pexels-ali-pazani-3196587.jpg\",\n                \"/images/portrait/pexels-ali-pazani-3196587.jpg\"\n            ]\n        },\n        {\n            profile: '/images/Profiles/LeesAdventures.jpg',\n            name: 'John Doe',\n            genres: ['Street','Portrait','Travel'],\n            images: [\n                \"/images/portrait/pexels-ali-pazani-3196587.jpg\",\n                \"/images/portrait/pexels-ali-pazani-3196587.jpg\",\n                \"/images/portrait/pexels-ali-pazani-3196587.jpg\",\n                \"/images/portrait/pexels-ali-pazani-3196587.jpg\"\n            ]\n        },\n        {\n            profile: '/images/Profiles/LeesAdventures.jpg',\n            name: 'John Doe',\n            genres: ['Street','Portrait','Travel'],\n            images: [\n                \"/images/portrait/pexels-ali-pazani-3196587.jpg\",\n                \"/images/portrait/pexels-ali-pazani-3196587.jpg\",\n                \"/images/portrait/pexels-ali-pazani-3196587.jpg\",\n                \"/images/portrait/pexels-ali-pazani-3196587.jpg\"\n            ]\n        }\n    ]);\n    //you need to get the current userId? localstorage? redux? api call?    \n\n    //use the userid to make a call to the api\n    const getData = () => {\n        //make the call fetch/axios?\n        fetch('some url')\n            .then(response => response.json)\n            .then(data => {\n                console.log(data)\n            })\n            .catch(e => {\n                console.log(e)\n            })\n\n        axios.get('some url')\n            .then(data => {\n                console.log(data)\n            })\n            .catch(e => {\n                console.log(e)\n            })\n    }\n\n    useEffect(() => {\n        getData();\n    }, [])\n\n    //when displaying the collection do a check to make sure it's valid\n    //like {collection && collection.profile ? collection.map}\n\n    return (\n        <>  \n            <div className=\"columns is-centered is-gapless mt-5 is-multiline\">\n                {collection && collection.length > 0 ? collection.map((singleCollection, idx) => (\n                    <ArtistCollection key={idx} data={singleCollection}/>\n                )) : ''}\n            </div>\n        </>\n    )\n}\n\nexport default Dashboard","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Profile = (props) => {\n    const [userId, setUserId] = useState('');\n    const [currentTab, setCurrentTab] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [currentCollection, setCurrentCollection] = useState([]);\n\n    //you can create a default object or model and set it here so you don't run into empty error\n    //make a class called UserProfile with everything set to blank and set it to the default state\n\n    /*\n        class UserProfile {\n            constructor(){\n                this.name = '';\n                this.profilePic = '';\n                this.email = '';\n                this.isFavorite = '';\n                this.description = '';\n                etc etc\n            }\n        }\n\n    */\n\n\n    //const [userProfile, setUserProfile] = useState({new UserProfile()});\n\n    const [userProfile, setUserProfile] = useState({\n        name: 'John Doe',\n        profilePic: '/images/Profiles/LeesAdventures.jpg',\n        email: '',\n        isFavorite: false,\n        description: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dignissimos ullam, in maxime voluptatum iste nemo laboriosam facere voluptas modi id velnulla mollitia libero, amet numquam, tempore architecto nostrum et.',\n        genres: ['Portrait', 'Weddings', 'Street', 'Travel'],\n        collection: [\n            { type: 'Portrait', images: ['/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg'] },\n            { type: 'Weddings', images: ['/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg'] },\n            { type: 'Street', images: ['/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg'] },\n            { type: 'Travel', images: ['/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg'] }\n        ]\n    });\n\n    const getData = () => {\n        //make the call fetch/axios?\n        fetch('some url') //This is use the promise arch you can use async await\n            .then(response => response.json)\n            .then(data => {\n                console.log(data)\n            })\n            .catch(e => {\n                console.log(e)\n            })\n\n        axios.get('some url') //This is use the promise arch you can use async await\n            .then(data => {\n                console.log(data)\n            })\n            .catch(e => {\n                console.log(e)\n            })\n\n        //set the first tab\n        const firstTab = userProfile.genres[0];\n        switchTab(firstTab);\n\n        setLoading(false);\n    }\n\n    const switchTab = (tabName) => {\n        setCurrentTab(tabName);\n        const currentColl = userProfile.collection.find(x => x.type === tabName);\n        setCurrentCollection(currentColl.images);\n    }\n\n    useEffect(() => {\n        getData();\n    }, [])\n\n    return (\n        <>\n            {loading ? <div>Some Loading Icon etc</div> :\n                <>\n                    <header class=\"columns is-centered is-gapless\">\n                        <div class=\"column is-one-fifth ml-5\">\n                            <div class=\"card\">\n                                <div class=\"\">\n                                    <figure class=\"image\">\n                                        {userProfile.profilePic ? <img src={userProfile.profilePic} class=\"profilePic p-5\" alt=\"Profile picture\" /> : ''}\n                                    </figure>\n                                </div>\n                                <footer class=\"card-footer is-size-4\">\n                                    <a href={`mailto:${userProfile.email}`} class=\"card-footer-item\"><i class=\"fas fa-envelope has-text-black\"></i></a>\n                                    {userProfile.isFavorite\n                                        ? <a href=\"#\" class=\"card-footer-item\"><i class=\"fas fa-heart has-text-danger\"></i></a> :\n                                        <a href=\"#\" class=\"card-footer-item\"><i class=\"far fa-heart has-text-danger\"></i></a>}\n                                    <a href=\"#\" class=\"card-footer-item\"><i class=\"fas fa-share-square has-text-black\"></i></a>\n                                </footer>\n\n                            </div>\n                        </div>\n\n                        <div class=\"column columns is-centered is-three-fifths\">\n                            <div class=\"column columns is-four-fifths\">\n                                <div class=\"column is-full is-size-4 has-text-centered mt-5\">\n                                    <div class=\"aboutMeWrapper\">\n                                        <h2 id=\"nameContainer\" class=\"is-size-3\">{userProfile.name}</h2>\n                                        <span id=\"aboutMeContainer\">{userProfile.description}</span>\n                                    </div>\n                                    <div class=\"manageBtnWrapper\">\n                                        <button class=\"button has-text-light manageBtn\">Manage Portfolio</button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </header>\n                    <section class=\"columns is-centered\">\n                        <div class=\"column is-four-fifths\">\n                            <div class=\"tabs is-centered mt-5\">\n                                <ul>\n                                    {userProfile.genres.map((singleGenre, idx) => (\n                                        <li key={idx} className={`is-pointer ${currentTab === singleGenre ? 'active' : ''}`} onClick={() => switchTab(singleGenre)}>{singleGenre}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n                    </section>\n                    <main class=\"columns is-centered\">\n                        <div class=\"column columns is-four-fifths is-multiline\">\n                            {currentCollection && currentCollection.length > 0 ?\n                                currentCollection.map((singleImage, idx) => (\n                                    <div key={idx} class=\"column is-one-third-desktop is-half-tablet\">\n                                        <div class=\"card\">\n                                            <div class=\"card-image\">\n                                                <figure class=\"image\">\n                                                    <img src={singleImage} alt=\"\" />\n                                                </figure>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))\n                                : ''}\n                        </div>\n                    </main>\n                </>\n            }\n        </>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport {createUploadLink} from 'apollo-upload-client';\n\nimport Home from './pages/Home';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport AddImage from './components/AddImage';\nimport Dashboard from './pages/Dashboard';\nimport Profile from './pages/Profile';\n\nconst httpLink = createUploadLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/add\" component = {AddImage}/>\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}