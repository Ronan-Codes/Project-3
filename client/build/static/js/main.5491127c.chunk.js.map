{"version":3,"sources":["utils/mutations.js","utils/auth.js","components/Login/login.jsx","components/SignUp/signup.jsx","pages/Home.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Signup.js","components/Nav/index.js","components/AddImage/index.js","utils/queries.js","components/ArtistCollection/artistCollection.jsx","pages/Dashboard.js","components/AddProfile/index.js","pages/Profile/Profile.js","pages/Photographer/Photographer.js","App.js","serviceWorker.js","index.js"],"names":["ADD_PHOTO","gql","ADD_PROFILE_PHOTO","LOGIN","ADD_USER","UPDATE_USER","ADD_FOLLOWING","UNFOLLOW","ADD_FOLLOWER","REMOVE_FOLLOWER","ADD_GENRE","REMOVE_GENRE","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","props","useMutation","login","error","useState","password","setPassword","email","setEmail","handleLogin","event","a","preventDefault","variables","mutationResponse","data","AuthService","console","log","alert","class","id","type","placeholder","required","value","onChange","e","target","onClick","changeSignup","SignUp","formUsername","setUsername","formPassword","formEmail","addUser","handleSignup","username","description","Home","showSignup","setShowSignup","changeShowSignUp","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","Signup","formState","setFormState","handleFormSubmit","firstName","lastName","Auth","handleChange","name","className","to","onSubmit","htmlFor","document","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","length","forEach","el","dataset","$target","getElementById","classList","toggle","Nav","loggedIn","role","aria-label","href","aria-expanded","data-target","aria-hidden","logout","AddImage","onCompleted","reloadFunc","addPhoto","userInfo","getProfile","onDrop","useCallback","photo","userId","_id","useDropzone","getRootProps","getInputProps","isDragActive","USER_PHOTOS","USERS","QUERY_GENRES","ArtistCollection","genreArr","genreNameObj","genres","map","genre","idx","push","genreNames","join","profilePhoto","src","alt","photos","singleImage","key","Dashboard","following","currentSort","setSort","currentGenre","setGenre","usersArray","setUsersArray","userToken","useQuery","loadingFollowing","loading","dataFollowing","userPhotos","followingCount","loadingGenres","genresData","photographers","loadingUsers","dataUsers","photographersArray","users","followingArr","i","result","filter","checked","genreId","photographerId","currentPhotographerGenresArr","x","sortGenre","currentTarget","singleGenre","singleCollection","AddProfile","Profile","photoArray","profilePic","userGenres","refetchUser","refetch","genreArray","genreString","followers","followersCount","isFavorite","collection","images","updateUser","editModalStatus","setEditModal","modalStatus","toggleEditModal","currentModalImage","setModalImage","currentModalStatus","setPhotoModal","photoModalStatus","closePhotoModal","addGenre","reset","removeGenre","handleAddGenre","handleRemoveGenre","includes","defaultChecked","maxLength","aria-haspopup","p","Photographer","userFollowing","useParams","currentPhotographer","photographerData","addFollowing","unfollow","addFollower","removeFollower","handleFollowing","handleUnfollow","some","openPhotoModal","httpLink","createUploadLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","URL","process","origin","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5491127c.chunk.js","sourcesContent":["import gql from 'graphql-tag';\n\nexport const ADD_PHOTO = gql`\nmutation addPhoto($photo: Upload!, $userId: String){\n    addPhoto(photo: $photo, userId: $userId)\n}\n`\nexport const ADD_PROFILE_PHOTO = gql`\nmutation addProfilePhoto($photo: Upload!, $userId: String){\n    addProfilePhoto(photo: $photo, userId: $userId)\n}\n`\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username:$username, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const UPDATE_USER = gql`\n  mutation updateUser($description: String) {\n    updateUser(description: $description) {\n      description\n    }\n  }\n`;\n\nexport const ADD_FOLLOWING = gql`\n    mutation addFollowing($id: ID!) {\n        addFollowing(followingId: $id) {\n            _id\n            username\n            followingCount\n            following {\n                _id\n                username\n            }\n        }\n    }\n`;\n\nexport const UNFOLLOW = gql`\n    mutation unfollow($id: ID!) {\n        unfollow(followingId: $id) {\n            _id\n            username\n            followingCount\n            following {\n                _id\n                username\n            }\n        }\n    }\n`;\n\nexport const ADD_FOLLOWER = gql`\n    mutation addFollower($id: ID!) {\n        addFollower(followerId: $id) {\n            _id\n            username\n            followersCount\n            followers {\n                _id\n                username\n            }\n        }\n    }\n`;\n\nexport const REMOVE_FOLLOWER = gql`\n    mutation removeFollower($id: ID!) {\n        removeFollower(followerId: $id) {\n            _id\n            username\n            followersCount\n            followers {\n                _id\n                username\n            }\n        }\n    }\n`;\n\nexport const ADD_GENRE = gql`\n  mutation addGenre($genreId: ID!) {\n    addGenre(genreId: $genreId) {\n      genres {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const REMOVE_GENRE = gql`\n  mutation addGenre($genreId: ID!) {\n    removeGenre(genreId: $genreId) {\n      genres {\n        _id\n        name\n      }\n    }\n  }\n`;","\nimport decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { LOGIN } from '../../utils/mutations';\nimport { useMutation } from '@apollo/client';\nimport AuthService from '../../utils/auth';\nimport './style.css'\n\nconst Login = (props) => {\n    const [login, { error }] = useMutation(LOGIN);\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [formState, setFormState] = useState({ email: '', password: '' });\n\n\n\n    const showSignup = () => {\n        props.changeSignup(true);\n    }\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        try {\n            const mutationResponse = await login({\n                variables: {\n                    email: email,\n                    password: password\n                },\n            });\n            const token = mutationResponse.data.login.token;\n            AuthService.login(token);\n            window.location.assign('/dashboard');\n        } catch (e) {\n            console.log(e);\n        }\n\n        if (!email || !password) {\n            alert('Missing Email Address or Password') //Or some modal popup\n            return\n        }\n    }\n\n    return (\n        <>\n            <section class=\"hero is-fullheight loginFormWrapper\">\n                <div class=\"hero-body\">\n                    <div class=\"container\">\n                        <div class=\"columns is-centered\">\n                            <div class=\"column is-5-tablet is-4-desktop is-3-widescreen\">\n                                <section class=\"box\">\n                                    <div class=\"loginForm\">\n                                        <div class=\"field\">\n                                            <div class=\"control has-icons-left\">\n                                                <input id=\"loginEmail\" type=\"email\" placeholder=\"Email\" class=\"input\" required\n                                                    value={email}\n                                                    onChange={e => setEmail(e.target.value)}\n                                                />\n                                                <span class=\"icon is-small is-left\">\n                                                    <i class=\"fa fa-envelope\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"field\">\n                                            <div class=\"control has-icons-left\">\n                                                <input id=\"loginPassword\" type=\"password\" placeholder=\"Password\" class=\"input\" required\n                                                    value={password}\n                                                    onChange={e => setPassword(e.target.value)}\n                                                />\n                                                <span class=\"icon is-small is-left\">\n                                                    <i class=\"fa fa-lock\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"field has-text-centered\">\n                                            <button class=\"button is-success\" onClick={handleLogin}>\n                                                Login\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div class=\"has-text-centered\"><a onClick={showSignup}>Signup?</a></div>\n                                </section>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default Login","import React, { useState } from \"react\";\nimport { ADD_USER } from '../../utils/mutations';\nimport { useMutation } from '@apollo/client';\nimport AuthService from '../../utils/auth';\nimport './style.css'\n\nconst SignUp = (props) => {\n    const [formUsername, setUsername] = useState('');\n    const [formPassword, setPassword] = useState('');\n    const [formEmail, setEmail] = useState('');\n    const [addUser] = useMutation(ADD_USER);\n\n    // const history = useHistory();\n\n    const showSignup = () => {\n        props.changeSignup(false);\n    }\n\n    var description = \"\"\n\n    const handleSignup = async (event) => {\n\n        // history.push('/dashboard');\n        event.preventDefault();\n        const mutationResponse = await addUser({\n            variables: {\n                username: formUsername,\n                email: formEmail,\n                password: formPassword,\n                description: description\n            },\n        });\n        const token = mutationResponse.data.addUser.token;\n        AuthService.login(token);\n        window.location.assign('/dashboard');\n        if (!formEmail || !formPassword || !formUsername) {\n            alert('Missing Email Address or Username or Password') //Or modal popup\n            return\n        }\n\n    }\n\n    return (\n        <>\n            <section class=\"hero is-fullheight loginFormWrapper\">\n                <div class=\"hero-body\">\n                    <div class=\"container\">\n                        <div class=\"columns is-centered\">\n                            <div class=\"column is-5-tablet is-4-desktop is-3-widescreen\">\n                                <section class=\"box\">\n                                    <div class=\"signupForm\">\n                                        <div class=\"field\">\n                                            <div class=\"control has-icons-left\">\n                                                <input id=\"signupUserName\" type=\"text\" placeholder=\"Username\" class=\"input\" required\n                                                    value={formUsername}\n                                                    onChange={e => setUsername(e.target.value)}\n                                                />\n                                                <span class=\"icon is-small is-left\">\n                                                    <i class=\"fa fa-user\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"field\">\n                                            <div class=\"control has-icons-left\">\n                                                <input id=\"signupEmail\" type=\"email\" placeholder=\"Email\" class=\"input\" required\n                                                    value={formEmail}\n                                                    onChange={e => setEmail(e.target.value)}\n                                                />\n                                                <span class=\"icon is-small is-left\">\n                                                    <i class=\"fa fa-envelope\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"field\">\n                                            <div class=\"control has-icons-left\">\n                                                <input id=\"signupPassword\" type=\"password\" placeholder=\"Password\" class=\"input\" required\n                                                    value={formPassword}\n                                                    onChange={e => setPassword(e.target.value)}\n                                                />\n                                                <span class=\"icon is-small is-left\">\n                                                    <i class=\"fa fa-lock\"></i>\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"field has-text-centered\">\n                                            <button class=\"button is-success\" onClick={handleSignup}>\n                                                Sign up\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div class=\"has-text-centered\"><a onClick={showSignup}>Login</a></div>\n                                </section>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default SignUp","import React, { useState } from \"react\";\nimport Login from \"../components/Login/login\";\nimport SignUp from \"../components/SignUp/signup\";\n\nconst Home = () => {\n  const [showSignup, setShowSignup] = useState(false);\n\n  const changeShowSignUp = (value) => {\n    setShowSignup(value);\n  }\n\n  return (\n    <>\n      {!showSignup ? <Login changeSignup={changeShowSignUp}/> : ''}\n      {showSignup ? <SignUp changeSignup={changeShowSignUp}/> : ''}\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, {useState} from \"react\";\nimport AuthService from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport './style.css'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n    // Get all \"navbar-burger\" elements\n    const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\n  \n    // Check if there are any navbar burgers\n    if ($navbarBurgers.length > 0) {\n  \n      // Add a click event on each of them\n      $navbarBurgers.forEach( el => {\n        el.addEventListener('click', () => {\n  \n          // Get the target from the \"data-target\" attribute\n          const target = el.dataset.target;\n          const $target = document.getElementById(target);\n  \n          // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n          el.classList.toggle('is-active');\n          $target.classList.toggle('is-active');\n  \n        });\n      });\n    }\n  \n  });\n\nfunction Nav() {\n//   const [loggedIn, setLoggedIn] = useState(true);\n  const handleLogout = (e) => {\n      e.preventDefault();\n      AuthService.logout();\n  }\n  const loggedIn = AuthService.loggedIn()\n  return (\n    <nav className=\"navbar mainNav\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n                <div className=\"navbar-item\">\n                  <a href=\"/dashboard\">\n                    <h1 className=\"title appName has-text-light\">Pic'd Up</h1>\n                  </a>\n                </div>\n\n                <a role=\"button\" className=\"navbar-burger \" aria-label=\"menu\" aria-expanded=\"false\"\n                    data-target=\"navbarBasicExample\">\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </a>\n            </div>\n\n            <div id=\"navbarBasicExample\" className=\"navbar-menu mainNav\">\n                <div className=\"navbar-start\"></div>\n\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item \">\n                        <div className=\"buttons\">\n                            {loggedIn ? <Link className=\"button clearColor\" to=\"/dashboard\">\n                                <i className=\"fas fa-home is-size-3 has-text-light\"></i>\n                                </Link> : <Link className=\"button clearColor\" to=\"/\">\n                                <i className=\"fas fa-home is-size-3 has-text-light\"></i>\n                            </Link>} \n                            {loggedIn ? <Link className=\"button clearColor\" to=\"/profile\"><i className=\"fas fa-user-circle is-size-3 has-text-light\"></i></Link> : ''}\n                            {loggedIn ? <a className=\"button clearColor\" onClick={handleLogout}>\n                                <i className=\"fas fa-sign-in-alt is-size-3 has-text-light\"></i>\n                            </a>\n                            : ''}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </nav>\n  );\n}\n\nexport default Nav;\n","import { useMutation } from '@apollo/client';\nimport React, {useCallback} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {ADD_PHOTO} from '../../utils/mutations'\nimport AuthService from '../../utils/auth'\n\n\nfunction AddImage(props){\n    const [addPhoto] = useMutation(ADD_PHOTO, {\n        onCompleted: props.reloadFunc\n    })\n    const userInfo = AuthService.getProfile();\n    const onDrop = useCallback(\n        ([photo]) => {\n            addPhoto({variables: {photo, userId: userInfo.data._id}})\n        },\n        [addPhoto]\n    )\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n    return(\n        <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            {isDragActive ? (\n                <p>Drop Here...</p>\n            ) : (\n                <p>Upload Photo</p>\n            )}\n        </div>\n    )\n}\n\nexport default AddImage;","import gql from 'graphql-tag'\n\nexport const ALL_PHOTOS = gql `\n    {\n        photos {\n            _id\n            photoName\n            mimetype\n            encoding\n        }\n    }\n`\nexport const USER_PHOTOS = gql `\nquery userPhotos($userId: ID!){\n    userPhotos(userId: $userId){\n        _id\n        username\n        description\n        email\n        profilePhoto{\n            _id\n        }\n        photos{\n            _id\n        }\n        following {\n            _id\n            username\n        }\n        followers {\n            _id\n            username\n        }\n        followingCount\n        followersCount\n        genres {\n            _id\n            name\n        }\n    }\n}\n`\nexport const USERS = gql `\n    {\n        users{\n            _id\n            description\n            username\n            profilePhoto{\n                _id\n            }\n            photos{\n                _id\n            }\n            following {\n                _id\n                username\n            }\n            followers {\n                _id\n                username\n            }\n            followingCount\n            followersCount\n            genres {\n                _id\n                name\n            }\n        }\n    }\n`\n\nexport const QUERY_GENRES = gql`\n  {\n    genres {\n      _id\n      name\n    }\n  }\n`;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\"\n\nconst ArtistCollection = (props) => {\n    let genreArr = []\n    let genreNameObj = props.data.genres ? props.data.genres : '';\n    const name = props.data.name ? props.data.name : ''\n\n    genreNameObj.map((genre, idx) => {\n        genreArr.push(genre.name)\n    })\n\n    let genreNames = genreArr.join(\" | \")\n\n    return (\n        <> \n            <section className=\"columns column is-four-fifths is-multiline mb-4\">\n                <div className=\"column dropShadow whiteBg\">\n                    <div className=\"columns is-mobile\">\n                        <div className=\"column is-one-quarter searchedUserPicCont\">\n                            <Link to={`/photographer/${props.data._id}`}>\n                                <a href=\"javascript:void(0);\"> \n                                    <div className=\"\">\n                                            <div className=\"imageContainer\">\n                                                {props.data.profilePhoto? \n                                                (<img src={`/photo/${props.data.profilePhoto._id}`} className=\"profilePic profilePicCustomPadding portfolioImg\" alt=\"Profile picture\" />\n                                                ):\n                                                (<img src='/images/Profiles/user.png' className=\"profilePic profilePicCustomPadding portfolioImg\" alt=\"Profile picture\" />)}\n                                            </div>\n                                        \n                                        <h2 className=\"has-text-centered is-size-4-tablet is-size-7-mobile\">{props.data.username}</h2>\n                                        <h3 className=\"has-text-centered is-size-6-tablet has-text-grey searchedUserGenre dashboardGenreFont\">\n                                            {genreNames}\n                                        </h3>\n                                    </div>\n                                </a>   \n                            </Link>\n                        </div>\n\n                        {/* Older version of the next div. Saved in case the new one breaks. */}\n                        {/* <div className=\"column is-three-quarters scrolling-wrapper is-vcentered\">\n                            <div className=\"columns is-full is-vcentered is-mobile\">\n                                {props.data.photos && props.data.photos.length > 0 ?\n                                    props.data.photos.map((singleImage, idx) => (\n\n                                        <div key={idx} className=\"is-one-third column mr-3 image p-0\">\n                                            <img src={`/photo/${singleImage._id}`} />\n                                        </div>\n                                    ))\n                                : ''}\n                            </div>\n                        </div> */}\n\n                        <div className=\"column is-three-quarters scrolling-wrapper is-vcentered\">\n                            <div className=\"columns column is-full is-vcentered is-mobile\">\n                                {props.data.photos && props.data.photos.length > 0 ?\n                                    props.data.photos.map((singleImage, idx) => (\n                                        <div key={idx} className=\"column is-one-third-tablet is-one-third-mobile dashWrapper p-1\">\n                                            <div className=\"dashContainer\">\n                                                <a href=\"javascript:void(0);\">\n                                                <img className=\"dashImg\" src={`/photo/${singleImage._id}`} alt=\"Portfolio photo\" />\n                                                {/* onClick={() => openPhotoModal(`${p._id}`)} */}\n                                                </a>\n                                             </div>\n                                        </div>                                        \n                                    ))\n                                : ''}\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default ArtistCollection;","import React, {useState} from \"react\";\nimport AuthService from \"../utils/auth\"\nimport { useQuery } from \"@apollo/client\";\nimport { USERS, USER_PHOTOS, QUERY_GENRES } from \"../utils/queries\";\nimport ArtistCollection from \"../components/ArtistCollection/artistCollection\";\n\nconst Dashboard = (props) => {\n    // state of Dropdown toggle\n    const [dropDown, toggleDropdown] = useState(false);\n    var genreDropDown = dropDown ? \"is-active\" : \"\";\n    const activateDropdown = () => {\n        toggleDropdown(!dropDown)\n    }\n\n    // state of Sort Checkbox\n    const [currentSort, setSort] = useState(\"all\");\n    // state of Genre Dropdown\n    const [currentGenre, setGenre] = useState(\"genre\");\n    const [usersArray, setUsersArray] = useState([]);\n\n    const userToken = AuthService.getProfile();\n\n    const {loading: loadingFollowing, data: dataFollowing} = useQuery(USER_PHOTOS, {\n        variables: {userId: userToken.data._id}\n    })\n    let userGenres\n    let following\n    let followingCount\n    \n    if(!loadingFollowing){\n        following = dataFollowing.userPhotos.following\n        followingCount = dataFollowing.userPhotos.followingCount\n        userGenres = dataFollowing.userPhotos.genres\n    }\n    console.log(following)\n    // Get following users functions end\n\n    // Get Genres functions start\n    const { loading: loadingGenres, data: genresData } = useQuery(QUERY_GENRES);\n    let genres\n    if(!loadingGenres){\n        genres = genresData.genres\n    }\n\n    const {loading: loadingUsers, data: dataUsers} = useQuery(USERS);\n    let photographers\n    let photographersArray = []\n    if(loadingUsers){\n        return <p>Loading...</p>\n    }\n    else {\n        photographers = dataUsers.users        \n    }\n    console.log(photographers)\n\n    const sortGenre = (genreId) => {\n        setGenre(genreId)\n        \n        photographersArray = []\n        setUsersArray([])\n\n        for (var i = 0; i < photographers.length; i++) {\n            var photographerId = photographers[i]\n            var currentPhotographerGenresArr = photographers[i].genres\n\n            for (var x = 0; x < currentPhotographerGenresArr.length; x++) {\n                var eachUserGenre = currentPhotographerGenresArr[x]._id\n                if (eachUserGenre === genreId) {\n                    photographersArray.push(photographerId)\n                } \n            }\n            \n            setUsersArray(photographersArray)\n        }\n        \n    }\n\n    // get following data from photographers based on following ID\n    let followingArr = []\n    \n    for (var i = 0; i < following.length; i++) {\n        var result = (photographers.filter(e => e._id === following[i]._id))\n        console.log(result)\n        followingArr.push(result[0])\n    }\n    console.log(followingArr)\n    // following end\n\n    return (\n        <>  \n            <div className=\"columns is-centered is-gapless mt-4 is-multiline mx-2\">\n            <div className=\"column is-four-fifths\">\n                    <div className=\"card mb-4\">\n                        <header className=\"card-header browseSortBg\">\n                            <p className=\"card-header-title is-centered has-text-light py-1\">\n                            Browse\n                            </p>\n\n                        </header>\n                        <div className=\"card-content py-2\">\n                            <div className=\"content\">\n                         \n                                <div className=\"control has-text-centered\">\n                                    <label className=\"radio\">\n                                        <input type=\"radio\" value=\"all\" name=\"photographersSort\" checked={currentSort === 'all'} onClick={() => setSort('all')}/> All\n                                    </label>\n                                    <label className=\"radio\">\n                                        <input type=\"radio\" value=\"following\" name=\"photographersSort\" checked={currentSort === 'following'} onClick={() => setSort('following')}/> Following\n                                    </label>\n\n                                    <label className=\"radio\" onClick={() => setSort('genre')}>\n                                        <input type=\"radio\" value=\"genre\" name=\"photographersSort\" checked={currentSort === 'genre'} onClick={() => setSort('genre')}/>&nbsp;\n\n                                                <select className=\"dropdown-content py-1\" value={currentGenre} onChange={e => sortGenre(e.currentTarget.value)}>\n                                                    <option href=\"#\" className=\"\" value=\"genre\">\n                                                        Genre\n                                                    </option>\n                                                    {genres && genres.length > 0 ?\n                                                                genres.map((singleGenre, idx) => {\n                                                                    return(\n                                                                        <option href=\"#\" className=\"\" key={singleGenre.name} value={singleGenre._id}>\n                                                                            {singleGenre.name}\n                                                                        </option>\n                                                                    )\n                                                                }) : \"\"}\n                                                </select>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                {currentSort === \"following\" && \n                    followingArr.map((singleCollection, idx) => (\n                        <ArtistCollection key={singleCollection.name} data={singleCollection}/>\n                    ))  \n                }\n\n                {currentSort === \"all\" && \n                    dataUsers.users.map((singleCollection, idx) => (\n                        <ArtistCollection key={singleCollection.name} data={singleCollection}/>\n                    ))  \n                }\n\n                {currentSort === \"genre\" && \n                    usersArray.map((singleCollection, idx) => (\n                        <ArtistCollection key={singleCollection.name} data={singleCollection}/>\n                    ))  \n                }\n            </div>\n        </>\n    )\n}\n\nexport default Dashboard","import { useMutation} from '@apollo/client';\nimport React, {useCallback} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {ADD_PROFILE_PHOTO} from '../../utils/mutations'\nimport AuthService from '../../utils/auth'\n\n\nfunction AddProfile(props){\n    const [addPhoto] = useMutation(ADD_PROFILE_PHOTO, {\n        onCompleted: props.reloadFunc\n    })\n    const userInfo = AuthService.getProfile();\n    const onDrop = useCallback(\n        ([photo]) => {\n            addPhoto({variables: {photo, userId: userInfo.data._id}})\n        },\n        [addPhoto]\n    )\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n    return(\n        <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            {isDragActive ? (\n                <i class=\"fas fa-plus\"></i>\n            ) : (\n                <i class=\"fas fa-plus\"></i>\n            )}\n        </div>\n    )\n}\n\nexport default AddProfile;","import React, { useState, useEffect} from \"react\";\nimport AuthService from '../../utils/auth'\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { UPDATE_USER, ADD_GENRE, REMOVE_GENRE } from '../../utils/mutations';\nimport {USER_PHOTOS, QUERY_GENRES} from '../../utils/queries'\nimport AddImage from \"../../components/AddImage\";\nimport AddProfile from \"../../components/AddProfile\";\nimport './style.css'\n\nconst Profile = (props) => {\n    const userToken = AuthService.getProfile();\n\n    const {loading, data, refetch: refetchUser} = useQuery(USER_PHOTOS, {\n        variables: {userId: userToken.data._id}\n    })\n    let _id\n    let photoArray\n    let email\n    let username\n    let profilePic\n    let description\n    let following\n    let followers\n    let followingCount\n    let followersCount\n    let userGenres\n\n    let genreArray = []\n    let genreString = \"\"\n    if(!loading){\n        _id = data.userPhotos._id\n        photoArray = data.userPhotos.photos\n        email = data.userPhotos.email\n        username = data.userPhotos.username\n        profilePic = data.userPhotos.profilePhoto\n        description = data.userPhotos.description\n        following = data.userPhotos.following\n        followers = data.userPhotos.followers\n        followingCount = data.userPhotos.followingCount\n        followersCount = data.userPhotos.followersCount\n        userGenres = data.userPhotos.genres\n        for (var i = 0; i < userGenres.length; i++) {\n            genreArray.push(userGenres[i].name)\n        }\n\n        genreString = genreArray.join(\" | \")\n    }\n    console.log(genreArray)\n\n    const [currentTab, setCurrentTab] = useState('');\n    const [currentCollection, setCurrentCollection] = useState([]);\n\n    const [userProfile, setUserProfile] = useState({\n        name: 'John Doe',\n        profilePic: '/images/Profiles/LeesAdventures.jpg',\n        email: '',\n        isFavorite: false,\n        genres: ['Portrait', 'Weddings', 'Street', 'Travel'],\n        collection: [\n            { type: 'Portrait', images: ['/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg', '/images/portrait/pexels-ali-pazani-3196587.jpg'] },\n            { type: 'Weddings', images: ['/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg', '/images/portrait/pexels-bruno-salvadori-2269872.jpg'] },\n            { type: 'Street', images: ['/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg', '/images/portrait/pexels-cheda-stankovic-3395708.jpg'] },\n            { type: 'Travel', images: ['/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg', '/images/portrait/GinaPix.jpg'] }\n        ]\n    });\n\n    const switchTab = (tabName) => {\n        setCurrentTab(tabName);\n        const currentColl = userProfile.collection.find(x => x.type === tabName);\n        setCurrentCollection(currentColl.images);\n    }\n\n    // editModal Functions\n    const [updateUser, {error: errorUpdateUser}] = useMutation(UPDATE_USER,{\n        onCompleted: refetchUser,\n    });\n    const [editModalStatus, setEditModal] = useState(false);\n    var modalStatus = editModalStatus ? \"is-active\" : \"\";\n    var toggleEditModal = () => {\n        setEditModal(!editModalStatus)\n    }\n\n    const [formState, setFormState] = useState({ description: description});\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        const mutationResponse = await updateUser({\n          variables: {\n            description: formState.description,\n          },\n        });\n       \n        toggleEditModal();\n\n        console.log(mutationResponse)\n    };\n\n    const handleChange = (event) => {\n        const { description, value } = event.target;\n        setFormState({\n        description: value\n        });\n    };\n    // editModal Function End\n\n    // photoModal functions\n    const [currentModalImage, setModalImage] = useState(\"\");\n    const [currentModalStatus, setPhotoModal] = useState(false);\n    var photoModalStatus = currentModalStatus ? \"is-active\" : \"\";\n    const openPhotoModal = (id) => {\n        setModalImage(id)\n        setPhotoModal(!currentModalStatus)\n    }\n    const closePhotoModal = () => {\n        setPhotoModal(!currentModalStatus)\n    }\n\n    // ADD/REMOVE Genre functions\n    const { loading: loadingGenres, data: genresData } = useQuery(QUERY_GENRES);\n    let genres\n    if(!loadingGenres){\n        genres = genresData.genres\n    }\n\n    // { data, loading, error, reset } can utilize these\n    const [addGenre, {error: addGenreError, reset}] = useMutation(ADD_GENRE,{\n        onCompleted: refetchUser,\n    });\n    const [removeGenre,{error: removeGenreError}] = useMutation(REMOVE_GENRE,{\n        onCompleted: refetchUser,\n    });\n\n    const handleAddGenre = async (genreId) => {\n        const mutationResponse = await addGenre({\n            variables: {\n                genreId: genreId\n            }\n        })\n        console.log(mutationResponse)\n        // refetch()\n    }\n\n    const handleRemoveGenre = async (genreId) => {\n        const mutationResponse = await removeGenre({\n            variables: {\n                genreId: genreId\n            }\n        })\n        console.log(mutationResponse)\n    }\n\n    return (\n        <>\n            {loading ? <div>Some Loading Icon etc</div> :\n                <>\n                    <header className=\"columns is-centered is-gapless is-mobile pl-2\">\n                        <div className=\"column is-one-fifth-tablet is-one-third-mobile mt-2\">\n                            <div className=\"\">\n\n                                <div className=\"imageContainer\">\n                                    {profilePic ? <img src={`/photo/${profilePic._id}`} className=\"profilePic p-3 portfolioImg\" alt=\"Profile picture\" /> : <img src='/images/Profiles/user.png' className=\"profilePic p-3 portfolioImg\" alt=\"Profile picture\" />}\n                                    <button className=\"addProfile is-size-2-widescreen is-size-3-desktop is-size-5-tablet is-size-7-mobile\"><AddProfile reloadFunc={refetchUser}><i className=\"fas fa-plus\"></i></AddProfile></button>\n                                </div>\n\n                                <div className=\"has-text-centered is-centered\">\n                                \n                                    <div className={`modal ${modalStatus}`}>\n                                        <div className=\"modal-background\" onClick={toggleEditModal}></div>\n                                        <div className=\"modal-card editModalMobile\">\n                                            <header className=\"modal-card-head p-2\">\n                                                <p className=\"modal-card-title is-size-5 has-text-weight-semibold\">Edit Profile</p>\n                                            </header>\n\n                                            <section className=\"modal-card-body p-0\">\n                                                <h2 className=\"pt-2 pb-1 has-text-weight-semibold\">Add Specialty</h2>\n                                                <form className=\"\">\n                                                        {genres && genres.length > 0 ?\n                                                            genres.map((singleGenre, idx) => \n                                                                {\n                                                                    if(genreArray.includes(singleGenre.name)) {\n                                                                        return (\n                                                                            <div className=\"is-inline-block\" key={idx}>\n                                                                                <label className=\"checkbox mr-3\">\n                                                                                    <input defaultChecked={true} type=\"checkbox\" id=\"\" name={singleGenre.name} value={singleGenre.name} onClick={() => handleRemoveGenre(`${singleGenre._id}`)}/> {singleGenre.name}\n                                                                                </label>\n                                                                            </div>\n                                                                        )\n                                                                    } else {\n                                                                        return (\n                                                                            <div className=\"is-inline-block\" key={idx}>\n                                                                                <label className=\"checkbox mr-3\">\n                                                                                    <input type=\"checkbox\" id=\"\" name={singleGenre.name} value={singleGenre.name} onClick={() => handleAddGenre(`${singleGenre._id}`)}/> {singleGenre.name}\n                                                                                </label>\n                                                                            </div>\n                                                                        )\n                                                                    }\n                                                                }\n                                                            ): \"\"\n                                                        }\n                                                </form>\n                                            </section>\n\n                                            <section className=\"modal-card-body px-4 pt-0 pb-4\">\n                                                <hr className=\"p-0 mt-2 mb-2\"/>\n                                                <h2 className=\"has-text-weight-semibold\">About Me</h2>\n                                                <textarea className=\"textarea\" maxLength=\"150\" placeholder={description} onChange={handleChange}></textarea>\n                                            </section>\n                                            \n                                            <footer className=\"modal-card-foot p-2\">\n                                                <div className=\"m-auto\">\n                                                <button className=\"button is-small is-success\" onClick={handleFormSubmit}>Save</button>\n                                                <button className=\"button is-small is-success\" onClick={toggleEditModal}>Exit</button>\n                                                </div>\n                                            </footer>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <footer className=\"card-footer is-size-4 is-size-6-mobile\">\n                                </footer>\n\n                            </div>\n                        </div>\n\n                        <div className=\"column columns is-centered is-two-fifths-tablet is-two-thirds-mobile\">\n                            <div className=\"column columns is-full \">\n                                <div className=\"column is-full  ml-1 mt-2 mr-2\">\n                                    <div className=\"aboutMeWrapper  \">\n                                        <h2 className=\"is-size-3 is-size-5-mobile\">{username}</h2>\n                                        <p className=\"is-size-5 is-size-7-mobile\"><i class=\"fas fa-camera-retro has-text-black\"></i> {genreString}</p>\n                                        <p className=\"is-size-5 is-size-7-mobile\"><a href={`mailto:${email}`}><i className=\"fas fa-envelope has-text-black\"></i> {email}</a></p>\n                                        <span className=\"is-size-5 is-size-7-mobile long-word-break\">{description? description : \"Tell us about yourself!\"}</span>\n                                        \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </header>\n\n                    <div className=\"columns is-centered has-text-centered is-mobile mx-2\">\n                        <div className=\"column is-three-fifths-tablet is-full-mobile\">\n                            <div className=\"columns is-mobile customMargin\">\n                                <div className=\"column is-two-fourths-mobile p-0 mr-1\">\n                                    <button className=\"btnInProfile button is-size-7-mobile is-primary modal-button\" data-target=\"modal\" aria-haspopup=\"true\" onClick={toggleEditModal}>Edit Profile</button>\n                                </div>\n                                <div className=\"column is-two-fourths-mobile p-0 ml-1\">\n                                    <button className=\"btnInProfile button is-size-7-mobile has-text-light\"><AddImage reloadFunc={refetchUser}/></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <section className=\"columns is-centered\">\n                        <div className=\"column is-three-fifths pb-0 pt-0\">\n                            <div className=\"tabs is-centered mt-5\">\n                                <ul>\n                                    <li className=\"is-pointer\">Portfolio</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </section>\n\n                    <main className=\"columns is-centered\">\n                        <div className=\"column columns is-three-fifths is-multiline is-mobile m-1 \">\n                            {photoArray && photoArray.length > 0 ?\n                                photoArray.map((p, idx) => (\n                                    <div key={idx} className=\"column is-one-third-tablet is-one-third-mobile imageWrapper p-1\">\n                                        <div className=\"imageContainer\">\n                                            <a href=\"javascript:void(0);\">\n                                            <img className=\"portfolioImg\" src={`/photo/${p._id}`} onClick={() => openPhotoModal(`${p._id}`)} alt=\"Portfolio photo\" />\n                                            </a>\n                                        </div>\n                                    </div>\n                                ))\n                                : ''}\n                        </div>\n\n                        <div className={`modal ${photoModalStatus}`}>\n                                <div className=\"modal-background\" onClick={closePhotoModal}></div>\n                                <div className=\"modal-content\">\n                                    <p className=\"image is-fullwidth\">\n                                    <img src={`/photo/${currentModalImage}`} alt=\"Portfolio photo modal\"/>\n                                    </p>\n                                </div>\n                                <button className=\"modal-close is-large\" onClick={closePhotoModal} aria-label=\"close\"></button>\n                        </div>\n                    </main>\n                </>\n            }\n        </>\n    )\n}\n\nexport default Profile;","import React, { useState, useEffect} from \"react\";\nimport AuthService from \"../../utils/auth\"\nimport { useParams } from 'react-router-dom';\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {USER_PHOTOS} from '../../utils/queries'\n\nimport { ADD_FOLLOWING, UNFOLLOW, ADD_FOLLOWER, REMOVE_FOLLOWER } from '../../utils/mutations';\nimport './style.css'\n\nconst Photographer = (props) => {\n    // unfollow functions\n    const userToken = AuthService.getProfile();\n\n    const {loading: loadingFollowing, data: dataFollowing} = useQuery(USER_PHOTOS, {\n        variables: {userId: userToken.data._id}\n    })\n\n    let userFollowing\n    if(!loadingFollowing){\n        userFollowing = dataFollowing.userPhotos.following\n        console.log(userFollowing)\n\n    }\n    // unfollow functions end\n    \n\n    const { id } = useParams();\n\n    const {loading: currentPhotographer, data: photographerData} = useQuery(USER_PHOTOS, {\n        variables: {userId: id}\n    })\n    let _id\n    let photoArray\n    let email\n    let username\n    let profilePic\n    let description\n    if(!currentPhotographer){\n        _id = photographerData.userPhotos._id\n        photoArray = photographerData.userPhotos.photos\n        email = photographerData.userPhotos.email\n        username = photographerData.userPhotos.username\n        profilePic = photographerData.userPhotos.profilePhoto\n        description = photographerData.userPhotos.description\n    }\n\n    // photoModal functions\n    const [currentModalImage, setModalImage] = useState(\"\");\n    const [currentModalStatus, setPhotoModal] = useState(false);\n    var photoModalStatus = currentModalStatus ? \"is-active\" : \"\";\n    const openPhotoModal = (id) => {\n        setModalImage(id)\n        setPhotoModal(!currentModalStatus)\n    }\n    const closePhotoModal = () => {\n        setPhotoModal(!currentModalStatus)\n    }\n\n    // Following functions\n    const [addFollowing] = useMutation(ADD_FOLLOWING);\n    const [unfollow] = useMutation(UNFOLLOW);\n    const [addFollower] = useMutation(ADD_FOLLOWER);\n    const [removeFollower] = useMutation(REMOVE_FOLLOWER);\n\n    const handleFollowing = async() => {\n        try {\n          await addFollowing({\n            variables: { id: _id }\n          });\n        } catch (e) {\n          console.error(e);\n        }\n\n        try {\n            await addFollower({\n              variables: { id: _id }\n            });\n          } catch (e) {\n            console.error(e);\n          }\n    }\n\n    // unfollow functions contd..\n    const handleUnfollow = async() => {\n        try {\n          await unfollow({\n            variables: { id: _id }\n          });\n        } catch (e) {\n          console.error(e);\n        }\n\n        try {\n            await removeFollower({\n              variables: { id: _id }\n            });\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    // render Follow / Unfollow buttons\n    const followUnfollow = () => {\n        if (userFollowing.some(e => e._id === _id)) {\n            return(\n                <button className=\"btnInProfile button is-size-7-mobile is-primary\" onClick={handleUnfollow}>Unfollow</button>\n            )\n          }\n          else {\n              return(\n                <button className=\"btnInProfile button is-size-7-mobile is-primary\" onClick={handleFollowing}>Follow</button>\n              )\n          }\n    }\n    \n\n    return (\n        <>\n            {currentPhotographer ? <div>Some Loading Icon etc</div> :\n                <>\n                    <header className=\"columns is-centered is-gapless is-mobile pl-2\">\n                        <div className=\"column is-one-fifth-tablet is-one-third-mobile mt-2\">\n                            <div className=\"\">\n                                <div className=\"imageContainer\">\n                                {profilePic ? <img src={`/photo/${profilePic._id}`} className=\"profilePic p-3 portfolioImg\" alt=\"Profile picture\" /> : <img src='/images/Profiles/user.png' className=\"profilePic p-3 portfolioImg\" alt=\"Profile picture\" />}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"column columns is-centered is-two-fifths-tablet is-two-thirds-mobile\">\n                            <div className=\"column columns is-full \">\n                                <div className=\"column is-full  ml-1 mt-2 mr-2\">\n                                    <div className=\"aboutMeWrapper\">\n                                        <h2 className=\"is-size-3 is-size-5-mobile\">{username}</h2>\n                                        <span className=\"is-size-5 is-size-7-mobile long-word-break\">{description? description : \"\"}</span>\n                                        \n                                    </div>\n                                    <div className=\"manageBtnWrapper\">\n                                    </div>\n                                   \n                                </div>\n                            </div>\n                        </div>\n                    </header>\n\n                    <div className=\"columns is-centered has-text-centered is-mobile mx-2\">\n                        <div className=\"column is-three-fifths-tablet is-full-mobile\">\n                            <div className=\"columns is-mobile customMargin\">\n                                <div className=\"column is-two-fourths-mobile p-0 mr-1\">\n                                    {followUnfollow()}\n                                </div>\n                                <div className=\"column is-two-fourths-mobile p-0 ml-1\">\n                                    <a href={`mailto:${email}`}><button className=\"btnInProfile button is-size-7-mobile has-text-light\">Email</button></a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <section className=\"columns is-centered\">\n                        <div className=\"column is-three-fifths pb-0 pt-0\">\n                            <div className=\"tabs is-centered mt-5\">\n                                <ul>\n                                    <li className=\"is-pointer\">Portfolio</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </section>\n\n                    <main className=\"columns is-centered\">\n                        <div className=\"column columns is-three-fifths is-multiline is-mobile m-1 \">\n                            {photoArray && photoArray.length > 0 ?\n                                photoArray.map((p, idx) => (\n                                    <div key={idx} className=\"column is-one-third-tablet is-one-third-mobile imageWrapper p-1\">\n                                     \n                                        <div className=\"imageContainer\">\n                                            <a href=\"javascript:void(0);\">\n                                            <img className=\"portfolioImg\" src={`/photo/${p._id}`} onClick={() => openPhotoModal(`${p._id}`)} alt=\"Portfolio photo\" />\n                                            </a>\n                                        </div>\n                                    </div>\n                                ))\n                                : ''}\n                        </div>\n\n                        <div className={`modal ${photoModalStatus}`}>\n                                <div className=\"modal-background\" onClick={closePhotoModal}></div>\n                                <div className=\"modal-content\">\n                                    <p className=\"image is-fullwidth\">\n                                    <img src={`/photo/${currentModalImage}`} alt=\"Portfolio photo modal\"/>\n                                    </p>\n                                </div>\n                                <button className=\"modal-close is-large\" onClick={closePhotoModal} aria-label=\"close\"></button>\n                        </div>\n                    </main>\n\n                </>\n            }\n        </>\n    )\n}\n\nexport default Photographer;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport {createUploadLink} from 'apollo-upload-client';\n\nimport Home from './pages/Home';\nimport NoMatch from './pages/NoMatch';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport AddImage from './components/AddImage';\nimport Dashboard from './pages/Dashboard';\nimport Profile from './pages/Profile/Profile';\nimport Photographer from './pages/Photographer/Photographer'\n\nimport \"./index.css\"\n\nconst httpLink = createUploadLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/photographer/:id\" component={Photographer} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/add\" component = {AddImage}/>\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}